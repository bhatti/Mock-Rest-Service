plugins {
  id 'net.researchgate.release' version '2.8.1'
  id 'war'
  id 'eclipse'
  id 'idea'
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    //compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'log4j:log4j:1.2.17'
    compile 'org.owasp.encoder:encoder:1.1.1'
    compile 'io.netty:netty-all:4.0.35.Final'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.7'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.7'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.7'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.3'
    compile 'org.apache.velocity:velocity:1.7'
    compile 'org.thymeleaf:thymeleaf:3.0.3.RELEASE'

    compile 'commons-beanutils:commons-beanutils:1.9.1'
    compile 'com.thoughtworks.xstream:xstream:1.4.7'
    compile 'commons-httpclient:commons-httpclient:3.1'
    compile 'javax.jms:jms:1.1'
    compile 'javax.jms:jms-api:1.1-rev-1'
    compile 'org.eclipse.jetty:jetty-server:9.4.31.v20200723'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.reflections:reflections:0.9.9'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    testCompile 'junit:junit:4.11'
    testCompile 'com.googlecode.jmockit:jmockit:1.7'
    testCompile 'org.apache.activemq:activemq-all:5.10.0'
}

configurations { 
  compile.exclude module: "jms"
  compile.exclude module: "jmxtools"
}

jar {
  manifest {
    attributes 'Implementation-Title': 'PlexService', 'Implementation-Version': version
    attributes 'Main-Class': 'com.plexobject.deploy.AutoDeployer' 
    attributes("Class-Path": configurations.compile.collect { it.getName() }.join(' '))
  }
}

task run(type: JavaExec, dependsOn:[classes]) {
    main = 'com.plexobject.mock.ServerApp'
    classpath = sourceSets.main.runtimeClasspath
}

